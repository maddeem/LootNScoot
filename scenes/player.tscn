[gd_scene load_steps=11 format=3 uid="uid://b57vc81b1sjgf"]

[ext_resource type="Script" path="res://scripts/player.gd" id="1_fcm6k"]
[ext_resource type="Script" path="res://scripts/stat.gd" id="2_0amcb"]
[ext_resource type="Texture2D" uid="uid://b6p5uexqeods0" path="res://assets/textures/atlases/atlas_1750296996.569.png" id="2_tkl1g"]
[ext_resource type="Script" path="res://scripts/StatHolder.gd" id="3_62wel"]
[ext_resource type="Texture2D" uid="uid://brmjmbxic408n" path="res://assets/textures/LightTexture.png" id="3_fkj1d"]
[ext_resource type="PackedScene" uid="uid://xm1hxqqp4oav" path="res://scenes/weapons/ChainLightning.tscn" id="4_xvjx7"]

[sub_resource type="Resource" id="Resource_3wmld"]
script = ExtResource("2_0amcb")
name = "speed"
base_value = 1.0
min_value = 0.0

[sub_resource type="Resource" id="Resource_17qrh"]
script = ExtResource("3_62wel")
StatList = Array[ExtResource("2_0amcb")]([SubResource("Resource_3wmld")])

[sub_resource type="Shader" id="Shader_mayh6"]
code = "shader_type canvas_item;
#include \"res://shaders/OutlineInclude.gdshaderinc\"
// Shadow properties
uniform float shadow_offset_x = 5.0;
uniform float shadow_offset_y = 5.0;
uniform float shadow_blur : hint_range(0.0, 20.0) = 3.0;
uniform vec4 shadow_color : source_color = vec4(0.0, 0.0, 0.0, 0.6);
uniform float shadow_spread : hint_range(0.0, 10.0) = 0.0;
uniform vec2 texture_pixel_size;
uniform float outline_thickness;
uniform vec4 outline_color : source_color;
uniform float shadow_distance : hint_range(0.0, 100.0) = 10.0;
uniform float shadow_angle : hint_range(0.0, 360.0) = 315.0;

vec4 get_shadow_sample(sampler2D tex, vec2 uv, vec2 pixel_size) {
    vec4 color = vec4(0.0);
    float total_weight = 0.0;
    float angle_rad = radians(shadow_angle);
    vec2 shadow_offset = vec2(
        cos(angle_rad) * shadow_distance * pixel_size.x,
        sin(angle_rad) * shadow_distance * pixel_size.y
    );
    if (shadow_offset_x != 0.0 || shadow_offset_y != 0.0) {
        shadow_offset = vec2(shadow_offset_x * pixel_size.x, shadow_offset_y * pixel_size.y);
    }
    int samples = int(shadow_blur * 2.0) + 1;
    float blur_step = shadow_blur / float(samples);
    for (int x = -samples; x <= samples; x++) {
        for (int y = -samples; y <= samples; y++) {
            vec2 offset = vec2(float(x), float(y)) * blur_step * pixel_size;
            vec2 sample_uv = uv + shadow_offset + offset;
            float distance = length(vec2(float(x), float(y)) * blur_step);
            float weight = exp(-distance * distance / (2.0 * shadow_blur * shadow_blur));
            vec4 sample_color = texture(tex, sample_uv);
            color.a += sample_color.a * weight;
            total_weight += weight;
        }
    }
    if (total_weight > 0.0) {
        color.a /= total_weight;
    }
    if (shadow_spread > 0.0) {
        color.a = smoothstep(0.0, 1.0, color.a * (1.0 + shadow_spread));
    }
    color.rgb = shadow_color.rgb;
    color.a *= shadow_color.a;
    return color;
}

void fragment() {
	vec2 pixel_size = SCREEN_PIXEL_SIZE;
	vec4 original_color = texture(TEXTURE,UV);
	vec4 shadow = get_shadow_sample(TEXTURE, UV, pixel_size);
	vec3 final_color = mix(shadow.rgb, original_color.rgb, original_color.a);
	float final_alpha = max(shadow.a, original_color.a);
	vec4 outline = apply_outline(TEXTURE,UV,outline_thickness,TEXTURE_PIXEL_SIZE,outline_color,COLOR);
	COLOR = mix(vec4(final_color, final_alpha),outline,outline.a);
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_eslew"]
shader = SubResource("Shader_mayh6")
shader_parameter/shadow_offset_x = -15.0
shader_parameter/shadow_offset_y = 15.0
shader_parameter/shadow_blur = 3.0
shader_parameter/shadow_color = Color(0, 0, 0, 0.6)
shader_parameter/shadow_spread = 0.0
shader_parameter/texture_pixel_size = null
shader_parameter/outline_thickness = 1.5
shader_parameter/outline_color = Color(0, 0, 0, 1)
shader_parameter/shadow_distance = 10.0
shader_parameter/shadow_angle = 315.0

[node name="player" type="Node2D"]
script = ExtResource("1_fcm6k")
stat = SubResource("Resource_17qrh")

[node name="Chainlightning" parent="." instance=ExtResource("4_xvjx7")]

[node name="Camera2D" type="Camera2D" parent="."]
light_mask = 3
visibility_layer = 3
position_smoothing_enabled = true
position_smoothing_speed = 25.0

[node name="Sprite2D" type="Sprite2D" parent="."]
y_sort_enabled = true
material = SubResource("ShaderMaterial_eslew")
position = Vector2(0, -30)
texture = ExtResource("2_tkl1g")
hframes = 3
vframes = 3
frame = 7

[node name="PointLight2D" type="PointLight2D" parent="."]
texture_filter = 2
position = Vector2(0, -32)
scale = Vector2(1, 0.75)
energy = 2.0
blend_mode = 2
shadow_enabled = true
texture = ExtResource("3_fkj1d")
texture_scale = 16.0
